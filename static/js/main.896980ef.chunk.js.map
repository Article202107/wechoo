{"version":3,"sources":["fbase.js","routes/Question.js","routes/Home.js","routes/Profile.js","components/Navigation.js","routes/Auth.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authInstance","auth","authService","dbService","firestore","storage","Question","questionObj","userObj","isOwner","creator","uid","useState","isEditing","setIsEditing","newQuestion","setNewQuestion","newItemA","setNewItemA","newItemB","setNewItemB","pickCount","setPickCount","answerList","setAnswerList","onDelete","a","ok","window","confirm","collection","doc","id","delete","changeQuestion","e","target","name","value","toggleEdit","question","itemA","itemB","prev","useEffect","where","onSnapshot","snapshot","result","docs","map","data","pickCountA","filter","answer","pickCode","length","pickCountB","onSubmit","preventDefault","update","onPick","find","alert","add","qid","createAt","Date","now","onChange","type","onClick","className","Home","setQuestion","setItemA","setItemB","questions","setQuestions","orderBy","event","console","log","placeholder","Profile","Navigation","to","signOut","Auth","email","setEmail","password","setPasssword","newAccount","setNewAccount","error","setError","goSocialAuth","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","message","createUserWithEmailAndPassword","signInWithEmailAndPassword","required","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","currentUser","setIsLoggedIn","setUserObj","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.896980ef.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_API_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const authInstance = firebase.auth;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\n\nconst Question = ({ questionObj, userObj }) => {\n  const isOwner = questionObj.creator === userObj.uid;\n  const [isEditing, setIsEditing] = useState(false);\n  const [newQuestion, setNewQuestion] = useState(\"\");\n  const [newItemA, setNewItemA] = useState(\"\");\n  const [newItemB, setNewItemB] = useState(\"\");\n  const [pickCount, setPickCount] = useState({});\n  const [answerList, setAnswerList] = useState([]);\n\n  const onDelete = async () => {\n    const ok = window.confirm(\"삭제하시겠습니까?\");\n    ok && (await dbService.collection(\"Question\").doc(questionObj.id).delete());\n  };\n\n  const changeQuestion = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n\n    if (name === \"newQuestion\") {\n      setNewQuestion(value);\n    } else if (name === \"newItemA\") {\n      setNewItemA(value);\n    } else if (name === \"newItemB\") {\n      setNewItemB(value);\n    }\n  };\n\n  const toggleEdit = () => {\n    if (!isEditing) {\n      setNewQuestion(questionObj.question);\n      setNewItemA(questionObj.itemA);\n      setNewItemB(questionObj.itemB);\n    }\n    setIsEditing((prev) => !prev);\n  };\n\n  useEffect(() => {\n    dbService\n      .collection(\"Answer\")\n      .where(\"qid\", \"==\", questionObj.id)\n      .onSnapshot((snapshot) => {\n        const result = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n\n        setAnswerList(result);\n        //console.log(answerCount);\n        setPickCount({\n          pickCountA: result.filter((answer) => answer.pickCode === \"A\").length,\n          pickCountB: result.filter((answer) => answer.pickCode === \"B\").length,\n        });\n      });\n  }, []);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await dbService.collection(\"Question\").doc(questionObj.id).update({\n      question: newQuestion,\n      itemA: newItemA,\n      itemB: newItemB,\n    });\n    toggleEdit();\n  };\n\n  const onPick = async (pickCode) => {\n    if (answerList.find(({ uid }) => uid === userObj.uid)) {\n      alert(\"이미 선택하셨습니다.\");\n      return;\n    }\n\n    await dbService.collection(\"Answer\").add({\n      qid: questionObj.id,\n      uid: userObj.uid,\n      pickCode,\n      createAt: Date.now(),\n    });\n  };\n\n  return (\n    <>\n      {isEditing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input\n              name=\"newQuestion\"\n              onChange={changeQuestion}\n              value={newQuestion}\n              type=\"text\"\n            />\n            <div>\n              <input\n                name=\"newItemA\"\n                onChange={changeQuestion}\n                value={newItemA}\n                type=\"text\"\n              />\n              <input\n                name=\"newItemB\"\n                onChange={changeQuestion}\n                value={newItemB}\n                type=\"text\"\n              />\n            </div>\n            <input type=\"submit\" value=\"Edit\" />\n            <button onClick={toggleEdit}>Cancel</button>\n          </form>\n        </>\n      ) : (\n        <div>\n          <h4>{questionObj.question}</h4>\n          <div>\n            <div>\n              <span>{pickCount.pickCountA}</span>\n              <button onClick={() => onPick(\"A\")}>{questionObj.itemA}</button>\n            </div>\n            <span> VS </span>\n            <div>\n              <span>{pickCount.pickCountB}</span>\n              <button onClick={() => onPick(\"B\")}>{questionObj.itemB}</button>\n            </div>\n          </div>\n          {isOwner && (\n            <div className=\"edit-buttons\">\n              <button onClick={onDelete}>Delete Question</button>\n              <button onClick={toggleEdit}>Edit Question</button>\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Question;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Question from \"./Question\";\n\nconst Home = ({ userObj }) => {\n  const [question, setQuestion] = useState(\"\");\n  const [itemA, setItemA] = useState(\"\");\n  const [itemB, setItemB] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n\n  /* const getquestions = async () => {\n    const docs = await dbService.collection(\"question\").get();\n    docs.forEach((doc) => {\n      const { id } = doc;\n      const docData = doc.data();\n      setQuestions((pre) => [{ id, ...docData }, ...pre]);\n    });\n  }; */\n\n  useEffect(() => {\n    dbService\n      .collection(\"Question\")\n      .orderBy(\"createAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const docs = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n          pickCountA: 0,\n          pickCountB: 0,\n        }));\n\n        setQuestions(docs);\n      });\n  }, []);\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n\n    if (name === \"question\") {\n      setQuestion(value);\n    } else if (name === \"itemA\") {\n      setItemA(value);\n    } else if (name === \"itemB\") {\n      setItemB(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    console.log(question);\n\n    await dbService.collection(\"Question\").add({\n      question,\n      itemA,\n      itemB,\n      creator: userObj.uid,\n      createAt: Date.now(),\n    });\n    //console.log(\">>>> result : \" + JSON.stringify(result));\n\n    setQuestion(\"\");\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <span>question</span>\n        <input\n          name=\"question\"\n          placeholder=\"무엇을 선택하시겠습니까?\"\n          value={question}\n          onChange={onChange}\n          type=\"text\"\n        />\n        <div>\n          <input\n            type=\"text\"\n            name=\"itemA\"\n            placeholder=\"A안\"\n            value={itemA}\n            onChange={onChange}\n          />\n          <input\n            type=\"text\"\n            name=\"itemB\"\n            placeholder=\"B안\"\n            value={itemB}\n            onChange={onChange}\n          />\n        </div>\n        <input type=\"submit\" value=\"question\" />\n      </form>\n      <div>\n        {questions.map((question) => (\n          <Question\n            key={question.id}\n            questionObj={question}\n            userObj={userObj}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst Profile = () => <span>Profile</span>;\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { authService } from \"fbase\";\n\nconst Navigation = () => {\n  const onLogOut = () => {\n    authService.signOut();\n  };\n\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">Profile</Link>\n        </li>\n      </ul>\n      <input type=\"button\" value=\"Log Out\" onClick={onLogOut} />\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport { authService, authInstance } from \"fbase\";\n// import \"assets/scss/pages/auth.scss\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPasssword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPasssword(value);\n    }\n  };\n\n  const goSocialAuth = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n    try {\n      if (name === \"google\") {\n        provider = new authInstance.GoogleAuthProvider();\n      } else if (name === \"github\") {\n        provider = new authInstance.GithubAuthProvider();\n      }\n      const data = await authService.signInWithPopup(provider);\n      console.log(data);\n    } catch (error) {\n      //setError(error.message);\n      console.log(error.message);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let data;\n    try {\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount(!newAccount);\n\n  return (\n    <div className=\"main\">\n      <h1 className=\"login-title\">Login</h1>\n      <form className=\"signin-form\" onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={onChange}\n          placeholder=\"Email Address *\"\n          className=\"signin-form__email\"\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={onChange}\n          placeholder=\"Password *\"\n          className=\"signin-form__password\"\n          required\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"회원가입\" : \"로그인\"}\n          className=\"signin-form__submit\"\n        />\n        <div>{error}</div>\n      </form>\n      <div className=\"social-login\">\n        <button\n          className=\"social-login__google\"\n          name=\"google\"\n          onClick={goSocialAuth}\n        >\n          Continue with Google\n        </button>\n        <button\n          className=\"social-login__github\"\n          name=\"github\"\n          onClick={goSocialAuth}\n        >\n          Continue with Github\n        </button>\n      </div>\n      <span className=\"toggle-account\" onClick={toggleAccount}>\n        {newAccount ? \"로그인\" : \"회원가입\"}\n      </span>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n// import SignIn from \"routes/SignIn\";\nimport Auth from \"routes/Auth\";\n\nconst AppRouter = ({ isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn ? <Navigation></Navigation> : \"\"}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n            <Redirect from=\"/*\" to=\"/\" />\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            <Redirect from=\"/*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import AppRouter from \"components/Router\";\nimport { useState, useEffect } from \"react\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      console.log(user);\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  });\n\n  return (\n    <>\n      {init ? (\n        <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} />\n      ) : (\n        \"Loading...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"assets/scss/styles.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}